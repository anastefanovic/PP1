INFO  16:52:01,015 - Compiling source file: C:\Users\Administrator\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:52:01,111 - #28 program
INFO  16:52:01,112 - #39 MJProgram
INFO  16:52:01,112 - #39 int
INFO  16:52:01,114 - #39 x
INFO  16:52:01,115 - #6 ;
INFO  16:52:01,116 - #39 int
INFO  16:52:01,116 - #39 y
INFO  16:52:01,117 - #6 ;
INFO  16:52:01,117 - #39 int
INFO  16:52:01,117 - #39 z
INFO  16:52:01,118 - #10 ,
INFO  16:52:01,118 - #39 u
INFO  16:52:01,118 - #10 ,
INFO  16:52:01,119 - #39 v
INFO  16:52:01,119 - #4 [
INFO  16:52:01,119 - #5 ]
INFO  16:52:01,120 - #10 ,
INFO  16:52:01,120 - #39 w
INFO  16:52:01,120 - #4 [
INFO  16:52:01,120 - #5 ]
INFO  16:52:01,121 - #10 ,
INFO  16:52:01,122 - #39 x
INFO  16:52:01,122 - #6 ;
INFO  16:52:01,122 - #29 const
INFO  16:52:01,122 - #39 int
INFO  16:52:01,122 - #39 a
INFO  16:52:01,123 - #16 =
INFO  16:52:01,123 - #38 1
INFO  16:52:01,123 - #6 ;
INFO  16:52:01,123 - #29 const
INFO  16:52:01,126 - #39 bool
INFO  16:52:01,126 - #39 b
INFO  16:52:01,126 - #16 =
INFO  16:52:01,126 - #41 true
INFO  16:52:01,126 - #10 ,
INFO  16:52:01,126 - #39 c
INFO  16:52:01,127 - #16 =
INFO  16:52:01,127 - #41 false
INFO  16:52:01,127 - #6 ;
INFO  16:52:01,130 - #34 class
INFO  16:52:01,130 - #39 Klasa1
INFO  16:52:01,130 - #2 {
INFO  16:52:01,131 - #39 int
INFO  16:52:01,133 - #39 a
INFO  16:52:01,133 - #6 ;
INFO  16:52:01,133 - #2 {
INFO  16:52:01,134 - #33 void
INFO  16:52:01,134 - #39 f1
INFO  16:52:01,136 - #8 (
INFO  16:52:01,136 - #9 )
INFO  16:52:01,137 - #39 int
INFO  16:52:01,137 - #39 f
INFO  16:52:01,137 - #6 ;
INFO  16:52:01,137 - #2 {
INFO  16:52:01,138 - #3 }
INFO  16:52:01,139 - #3 }
INFO  16:52:01,141 - #3 }
INFO  16:52:01,141 - #34 class
INFO  16:52:01,143 - #39 Klasa2
INFO  16:52:01,143 - #35 extends
INFO  16:52:01,143 - #39 int
INFO  16:52:01,143 - #2 {
INFO  16:52:01,143 - #3 }
INFO  16:52:01,144 - #2 {
INFO  16:52:01,144 - #33 void
INFO  16:52:01,145 - #39 metoda
INFO  16:52:01,145 - #8 (
INFO  16:52:01,145 - #39 int
INFO  16:52:01,145 - #39 a
INFO  16:52:01,145 - #10 ,
INFO  16:52:01,145 - #39 int
INFO  16:52:01,145 - #39 b
INFO  16:52:01,145 - #4 [
INFO  16:52:01,145 - #5 ]
INFO  16:52:01,146 - #9 )
INFO  16:52:01,146 - #39 int
INFO  16:52:01,146 - #39 a
INFO  16:52:01,146 - #10 ,
INFO  16:52:01,146 - #39 b
INFO  16:52:01,146 - #6 ;
INFO  16:52:01,147 - #2 {
INFO  16:52:01,147 - #39 ident
INFO  16:52:01,147 - #37 .
INFO  16:52:01,148 - #39 ident
INFO  16:52:01,148 - #4 [
INFO  16:52:01,148 - #38 2
INFO  16:52:01,150 - #5 ]
INFO  16:52:01,154 - #16 =
INFO  16:52:01,155 - #12 -
INFO  16:52:01,156 - #39 ident
INFO  16:52:01,158 - #4 [
INFO  16:52:01,158 - #39 ident
INFO  16:52:01,158 - #37 .
INFO  16:52:01,158 - #39 ident
INFO  16:52:01,158 - #13 *
INFO  16:52:01,158 - #39 ident
INFO  16:52:01,160 - #5 ]
INFO  16:52:01,161 - #6 ;
INFO  16:52:01,161 - #39 ident
INFO  16:52:01,162 - #37 .
INFO  16:52:01,162 - #39 ident
INFO  16:52:01,162 - #4 [
INFO  16:52:01,162 - #38 2
INFO  16:52:01,162 - #5 ]
INFO  16:52:01,162 - #19 --
INFO  16:52:01,162 - #6 ;
INFO  16:52:01,163 - #42 if
INFO  16:52:01,163 - #8 (
INFO  16:52:01,163 - #39 ident
INFO  16:52:01,163 - #37 .
INFO  16:52:01,163 - #39 ident
INFO  16:52:01,163 - #4 [
INFO  16:52:01,163 - #39 i
INFO  16:52:01,163 - #5 ]
INFO  16:52:01,163 - #21 ||
INFO  16:52:01,164 - #38 2
INFO  16:52:01,164 - #13 *
INFO  16:52:01,164 - #39 ident
INFO  16:52:01,164 - #20 &&
INFO  16:52:01,164 - #38 2
INFO  16:52:01,164 - #27 <=
INFO  16:52:01,165 - #39 m
INFO  16:52:01,166 - #8 (
INFO  16:52:01,167 - #38 2
INFO  16:52:01,167 - #9 )
INFO  16:52:01,167 - #9 )
INFO  16:52:01,168 - #42 if
INFO  16:52:01,168 - #8 (
INFO  16:52:01,168 - #38 2
INFO  16:52:01,168 - #9 )
INFO  16:52:01,168 - #32 return
INFO  16:52:01,169 - #6 ;
INFO  16:52:01,171 - #43 else
INFO  16:52:01,172 - #2 {
INFO  16:52:01,172 - #31 read
INFO  16:52:01,172 - #8 (
INFO  16:52:01,172 - #39 ident
INFO  16:52:01,172 - #4 [
INFO  16:52:01,173 - #38 2
INFO  16:52:01,173 - #5 ]
INFO  16:52:01,173 - #9 )
INFO  16:52:01,173 - #6 ;
INFO  16:52:01,173 - #31 read
INFO  16:52:01,173 - #8 (
INFO  16:52:01,173 - #39 ident
INFO  16:52:01,173 - #9 )
INFO  16:52:01,173 - #6 ;
INFO  16:52:01,174 - #3 }
INFO  16:52:01,174 - #44 do
INFO  16:52:01,174 - #32 return
INFO  16:52:01,174 - #6 ;
INFO  16:52:01,174 - #45 while
INFO  16:52:01,174 - #8 (
INFO  16:52:01,174 - #38 2
INFO  16:52:01,174 - #24 >
INFO  16:52:01,175 - #39 idetnt
INFO  16:52:01,176 - #8 (
INFO  16:52:01,176 - #9 )
INFO  16:52:01,176 - #9 )
INFO  16:52:01,176 - #6 ;
INFO  16:52:01,177 - #46 switch
INFO  16:52:01,177 - #8 (
INFO  16:52:01,177 - #38 2
INFO  16:52:01,178 - #9 )
INFO  16:52:01,178 - #2 {
INFO  16:52:01,178 - #47 case
INFO  16:52:01,180 - #38 1
INFO  16:52:01,180 - #7 :
INFO  16:52:01,180 - #42 if
INFO  16:52:01,180 - #8 (
INFO  16:52:01,180 - #39 ident
INFO  16:52:01,180 - #37 .
INFO  16:52:01,180 - #39 ident
INFO  16:52:01,180 - #4 [
INFO  16:52:01,181 - #39 i
INFO  16:52:01,181 - #5 ]
INFO  16:52:01,181 - #21 ||
INFO  16:52:01,181 - #38 2
INFO  16:52:01,181 - #13 *
INFO  16:52:01,181 - #39 ident
INFO  16:52:01,181 - #20 &&
INFO  16:52:01,181 - #38 2
INFO  16:52:01,182 - #27 <=
INFO  16:52:01,182 - #39 m
INFO  16:52:01,182 - #8 (
INFO  16:52:01,182 - #38 2
INFO  16:52:01,182 - #9 )
INFO  16:52:01,182 - #9 )
INFO  16:52:01,182 - #42 if
INFO  16:52:01,182 - #8 (
INFO  16:52:01,182 - #38 2
INFO  16:52:01,182 - #9 )
INFO  16:52:01,183 - #32 return
INFO  16:52:01,183 - #6 ;
INFO  16:52:01,183 - #43 else
INFO  16:52:01,183 - #2 {
INFO  16:52:01,183 - #31 read
INFO  16:52:01,183 - #8 (
INFO  16:52:01,183 - #39 ident
INFO  16:52:01,183 - #4 [
INFO  16:52:01,183 - #38 2
INFO  16:52:01,183 - #5 ]
INFO  16:52:01,183 - #9 )
INFO  16:52:01,183 - #6 ;
INFO  16:52:01,183 - #31 read
INFO  16:52:01,183 - #8 (
INFO  16:52:01,184 - #39 ident
INFO  16:52:01,184 - #9 )
INFO  16:52:01,184 - #6 ;
INFO  16:52:01,184 - #48 break
INFO  16:52:01,184 - #6 ;
INFO  16:52:01,184 - #49 continue
INFO  16:52:01,186 - #6 ;
INFO  16:52:01,186 - #3 }
INFO  16:52:01,188 - #47 case
INFO  16:52:01,189 - #38 2
INFO  16:52:01,190 - #7 :
INFO  16:52:01,190 - #3 }
INFO  16:52:01,190 - #30 print
INFO  16:52:01,190 - #8 (
INFO  16:52:01,190 - #12 -
INFO  16:52:01,190 - #39 ident
INFO  16:52:01,190 - #11 +
INFO  16:52:01,190 - #38 2
INFO  16:52:01,192 - #13 *
INFO  16:52:01,192 - #39 ident
INFO  16:52:01,192 - #4 [
INFO  16:52:01,192 - #38 3
INFO  16:52:01,193 - #5 ]
INFO  16:52:01,193 - #8 (
INFO  16:52:01,193 - #9 )
INFO  16:52:01,193 - #10 ,
INFO  16:52:01,193 - #38 2
INFO  16:52:01,193 - #9 )
INFO  16:52:01,193 - #6 ;
INFO  16:52:01,193 - #3 }
INFO  16:52:01,193 - #3 }
