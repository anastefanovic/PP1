INFO  16:49:57,371 - Compiling source file: C:\Users\Administrator\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:49:57,476 - #28 program
INFO  16:49:57,477 - #39 MJProgram
INFO  16:49:57,477 - #39 int
INFO  16:49:57,480 - #39 x
INFO  16:49:57,482 - #6 ;
INFO  16:49:57,482 - #39 int
INFO  16:49:57,483 - #39 y
INFO  16:49:57,483 - #6 ;
INFO  16:49:57,483 - #39 int
INFO  16:49:57,483 - #39 z
INFO  16:49:57,483 - #10 ,
INFO  16:49:57,484 - #39 u
INFO  16:49:57,484 - #10 ,
INFO  16:49:57,484 - #39 v
INFO  16:49:57,484 - #4 [
INFO  16:49:57,484 - #5 ]
INFO  16:49:57,484 - #10 ,
INFO  16:49:57,485 - #39 w
INFO  16:49:57,485 - #4 [
INFO  16:49:57,485 - #5 ]
INFO  16:49:57,485 - #10 ,
INFO  16:49:57,486 - #39 x
INFO  16:49:57,486 - #6 ;
INFO  16:49:57,486 - #29 const
INFO  16:49:57,486 - #39 int
INFO  16:49:57,486 - #39 a
INFO  16:49:57,486 - #16 =
INFO  16:49:57,487 - #38 1
INFO  16:49:57,487 - #6 ;
INFO  16:49:57,487 - #29 const
INFO  16:49:57,489 - #39 bool
INFO  16:49:57,489 - #39 b
INFO  16:49:57,489 - #16 =
INFO  16:49:57,489 - #41 true
INFO  16:49:57,489 - #10 ,
INFO  16:49:57,489 - #39 c
INFO  16:49:57,489 - #16 =
INFO  16:49:57,489 - #41 false
INFO  16:49:57,489 - #6 ;
INFO  16:49:57,490 - #34 class
INFO  16:49:57,490 - #39 Klasa1
INFO  16:49:57,490 - #2 {
INFO  16:49:57,492 - #39 int
INFO  16:49:57,493 - #39 a
INFO  16:49:57,493 - #6 ;
INFO  16:49:57,493 - #2 {
INFO  16:49:57,494 - #33 void
INFO  16:49:57,495 - #39 f1
INFO  16:49:57,496 - #8 (
INFO  16:49:57,496 - #9 )
INFO  16:49:57,497 - #39 int
INFO  16:49:57,497 - #39 f
INFO  16:49:57,498 - #6 ;
INFO  16:49:57,498 - #2 {
INFO  16:49:57,498 - #3 }
INFO  16:49:57,500 - #3 }
INFO  16:49:57,502 - #3 }
INFO  16:49:57,502 - #34 class
INFO  16:49:57,503 - #39 Klasa2
INFO  16:49:57,503 - #35 extends
INFO  16:49:57,504 - #39 int
INFO  16:49:57,504 - #2 {
INFO  16:49:57,504 - #3 }
INFO  16:49:57,505 - #2 {
INFO  16:49:57,506 - #33 void
INFO  16:49:57,506 - #39 metoda
INFO  16:49:57,506 - #8 (
INFO  16:49:57,506 - #39 int
INFO  16:49:57,506 - #39 a
INFO  16:49:57,506 - #10 ,
INFO  16:49:57,506 - #39 int
INFO  16:49:57,506 - #39 b
INFO  16:49:57,507 - #4 [
INFO  16:49:57,507 - #5 ]
INFO  16:49:57,507 - #9 )
INFO  16:49:57,507 - #39 int
INFO  16:49:57,507 - #39 a
INFO  16:49:57,508 - #10 ,
INFO  16:49:57,508 - #39 b
INFO  16:49:57,508 - #6 ;
INFO  16:49:57,508 - #2 {
INFO  16:49:57,508 - #39 ident
INFO  16:49:57,508 - #37 .
INFO  16:49:57,509 - #39 ident
INFO  16:49:57,510 - #4 [
INFO  16:49:57,510 - #38 2
INFO  16:49:57,513 - #5 ]
INFO  16:49:57,516 - #16 =
INFO  16:49:57,518 - #12 -
INFO  16:49:57,519 - #39 ident
INFO  16:49:57,521 - #4 [
INFO  16:49:57,521 - #39 ident
INFO  16:49:57,521 - #37 .
INFO  16:49:57,521 - #39 ident
INFO  16:49:57,521 - #13 *
INFO  16:49:57,521 - #39 ident
INFO  16:49:57,523 - #5 ]
INFO  16:49:57,524 - #6 ;
INFO  16:49:57,524 - #39 ident
INFO  16:49:57,525 - #37 .
INFO  16:49:57,525 - #39 ident
INFO  16:49:57,525 - #4 [
INFO  16:49:57,525 - #38 2
INFO  16:49:57,525 - #5 ]
INFO  16:49:57,525 - #19 --
INFO  16:49:57,525 - #6 ;
INFO  16:49:57,525 - #42 if
INFO  16:49:57,525 - #8 (
INFO  16:49:57,526 - #39 ident
INFO  16:49:57,526 - #37 .
INFO  16:49:57,526 - #39 ident
INFO  16:49:57,526 - #4 [
INFO  16:49:57,526 - #39 i
INFO  16:49:57,526 - #5 ]
INFO  16:49:57,526 - #21 ||
INFO  16:49:57,527 - #38 2
INFO  16:49:57,527 - #13 *
INFO  16:49:57,527 - #39 ident
INFO  16:49:57,527 - #20 &&
INFO  16:49:57,528 - #38 2
INFO  16:49:57,528 - #27 <=
INFO  16:49:57,528 - #39 m
INFO  16:49:57,530 - #8 (
INFO  16:49:57,530 - #38 2
INFO  16:49:57,530 - #9 )
INFO  16:49:57,531 - #9 )
INFO  16:49:57,531 - #42 if
INFO  16:49:57,531 - #8 (
INFO  16:49:57,532 - #38 2
INFO  16:49:57,532 - #9 )
INFO  16:49:57,532 - #32 return
INFO  16:49:57,532 - #6 ;
INFO  16:49:57,534 - #43 else
INFO  16:49:57,535 - #2 {
INFO  16:49:57,536 - #31 read
INFO  16:49:57,536 - #8 (
INFO  16:49:57,536 - #39 ident
INFO  16:49:57,536 - #4 [
INFO  16:49:57,536 - #38 2
INFO  16:49:57,536 - #5 ]
INFO  16:49:57,536 - #9 )
INFO  16:49:57,536 - #6 ;
INFO  16:49:57,536 - #31 read
INFO  16:49:57,537 - #8 (
INFO  16:49:57,537 - #39 ident
INFO  16:49:57,537 - #9 )
INFO  16:49:57,537 - #6 ;
INFO  16:49:57,537 - #3 }
INFO  16:49:57,537 - #44 do
INFO  16:49:57,537 - #32 return
INFO  16:49:57,538 - #6 ;
INFO  16:49:57,538 - #45 while
INFO  16:49:57,538 - #8 (
INFO  16:49:57,538 - #38 2
INFO  16:49:57,538 - #24 >
INFO  16:49:57,538 - #39 idetnt
INFO  16:49:57,539 - #8 (
INFO  16:49:57,539 - #9 )
INFO  16:49:57,539 - #9 )
INFO  16:49:57,540 - #6 ;
INFO  16:49:57,540 - #46 switch
INFO  16:49:57,540 - #8 (
INFO  16:49:57,540 - #38 2
INFO  16:49:57,540 - #9 )
INFO  16:49:57,541 - #2 {
INFO  16:49:57,541 - #47 case
INFO  16:49:57,542 - #38 1
INFO  16:49:57,542 - #7 :
INFO  16:49:57,542 - #42 if
INFO  16:49:57,543 - #8 (
INFO  16:49:57,543 - #39 ident
INFO  16:49:57,543 - #37 .
INFO  16:49:57,543 - #39 ident
INFO  16:49:57,543 - #4 [
INFO  16:49:57,543 - #39 i
INFO  16:49:57,543 - #5 ]
INFO  16:49:57,543 - #21 ||
INFO  16:49:57,543 - #38 2
INFO  16:49:57,544 - #13 *
INFO  16:49:57,544 - #39 ident
INFO  16:49:57,544 - #20 &&
INFO  16:49:57,544 - #38 2
INFO  16:49:57,544 - #27 <=
INFO  16:49:57,544 - #39 m
INFO  16:49:57,544 - #8 (
INFO  16:49:57,544 - #38 2
INFO  16:49:57,544 - #9 )
INFO  16:49:57,544 - #9 )
INFO  16:49:57,544 - #42 if
INFO  16:49:57,544 - #8 (
INFO  16:49:57,545 - #38 2
INFO  16:49:57,545 - #9 )
INFO  16:49:57,545 - #32 return
INFO  16:49:57,545 - #6 ;
INFO  16:49:57,545 - #43 else
INFO  16:49:57,545 - #2 {
INFO  16:49:57,545 - #31 read
INFO  16:49:57,545 - #8 (
INFO  16:49:57,545 - #39 ident
INFO  16:49:57,545 - #4 [
INFO  16:49:57,545 - #38 2
INFO  16:49:57,545 - #5 ]
INFO  16:49:57,545 - #9 )
INFO  16:49:57,545 - #6 ;
INFO  16:49:57,546 - #31 read
INFO  16:49:57,546 - #8 (
INFO  16:49:57,546 - #39 ident
INFO  16:49:57,546 - #9 )
INFO  16:49:57,546 - #6 ;
INFO  16:49:57,546 - #3 }
INFO  16:49:57,546 - #47 case
INFO  16:49:57,548 - #38 2
INFO  16:49:57,548 - #7 :
INFO  16:49:57,548 - #3 }
INFO  16:49:57,548 - #3 }
INFO  16:49:57,549 - #3 }
