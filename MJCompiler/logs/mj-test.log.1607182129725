INFO  16:28:31,055 - Compiling source file: C:\Users\Administrator\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:28:31,160 - #28 program
INFO  16:28:31,160 - #39 MJProgram
INFO  16:28:31,160 - #39 int
INFO  16:28:31,163 - #39 x
INFO  16:28:31,165 - #6 ;
INFO  16:28:31,165 - #39 int
INFO  16:28:31,166 - #39 y
INFO  16:28:31,166 - #6 ;
INFO  16:28:31,166 - #39 int
INFO  16:28:31,166 - #39 z
INFO  16:28:31,167 - #10 ,
INFO  16:28:31,167 - #39 u
INFO  16:28:31,167 - #10 ,
INFO  16:28:31,167 - #39 v
INFO  16:28:31,167 - #4 [
INFO  16:28:31,167 - #5 ]
INFO  16:28:31,167 - #10 ,
INFO  16:28:31,168 - #39 w
INFO  16:28:31,168 - #4 [
INFO  16:28:31,168 - #5 ]
INFO  16:28:31,168 - #10 ,
INFO  16:28:31,169 - #39 x
INFO  16:28:31,169 - #6 ;
INFO  16:28:31,169 - #29 const
INFO  16:28:31,170 - #39 int
INFO  16:28:31,170 - #39 a
INFO  16:28:31,170 - #16 =
INFO  16:28:31,170 - #38 1
INFO  16:28:31,170 - #6 ;
INFO  16:28:31,170 - #29 const
INFO  16:28:31,172 - #39 bool
INFO  16:28:31,172 - #39 b
INFO  16:28:31,172 - #16 =
INFO  16:28:31,172 - #41 true
INFO  16:28:31,172 - #10 ,
INFO  16:28:31,172 - #39 c
INFO  16:28:31,173 - #16 =
INFO  16:28:31,173 - #41 false
INFO  16:28:31,173 - #6 ;
INFO  16:28:31,173 - #34 class
INFO  16:28:31,173 - #39 Klasa1
INFO  16:28:31,173 - #2 {
INFO  16:28:31,175 - #39 int
INFO  16:28:31,176 - #39 a
INFO  16:28:31,176 - #6 ;
INFO  16:28:31,176 - #2 {
INFO  16:28:31,177 - #33 void
INFO  16:28:31,178 - #39 f1
INFO  16:28:31,180 - #8 (
INFO  16:28:31,180 - #9 )
INFO  16:28:31,181 - #39 int
INFO  16:28:31,181 - #39 f
INFO  16:28:31,181 - #6 ;
INFO  16:28:31,181 - #2 {
INFO  16:28:31,182 - #3 }
INFO  16:28:31,183 - #3 }
INFO  16:28:31,185 - #3 }
INFO  16:28:31,185 - #34 class
INFO  16:28:31,186 - #39 Klasa2
INFO  16:28:31,186 - #35 extends
INFO  16:28:31,187 - #39 int
INFO  16:28:31,187 - #2 {
INFO  16:28:31,187 - #3 }
INFO  16:28:31,188 - #2 {
INFO  16:28:31,188 - #33 void
INFO  16:28:31,188 - #39 metoda
INFO  16:28:31,188 - #8 (
INFO  16:28:31,188 - #39 int
INFO  16:28:31,188 - #39 a
INFO  16:28:31,189 - #10 ,
INFO  16:28:31,189 - #39 int
INFO  16:28:31,190 - #39 b
INFO  16:28:31,190 - #4 [
INFO  16:28:31,190 - #5 ]
INFO  16:28:31,190 - #9 )
INFO  16:28:31,191 - #39 int
INFO  16:28:31,191 - #39 a
INFO  16:28:31,191 - #10 ,
INFO  16:28:31,191 - #39 b
INFO  16:28:31,191 - #6 ;
INFO  16:28:31,192 - #2 {
INFO  16:28:31,192 - #39 ident
INFO  16:28:31,192 - #37 .
INFO  16:28:31,194 - #39 ident
INFO  16:28:31,195 - #4 [
INFO  16:28:31,197 - #38 2
INFO  16:28:31,199 - #5 ]
INFO  16:28:31,202 - #16 =
INFO  16:28:31,203 - #12 -
INFO  16:28:31,205 - #39 ident
INFO  16:28:31,206 - #4 [
INFO  16:28:31,206 - #39 ident
INFO  16:28:31,207 - #37 .
INFO  16:28:31,207 - #39 ident
INFO  16:28:31,207 - #13 *
INFO  16:28:31,207 - #39 ident
INFO  16:28:31,209 - #5 ]
INFO  16:28:31,210 - #6 ;
INFO  16:28:31,210 - #39 ident
INFO  16:28:31,211 - #37 .
INFO  16:28:31,211 - #39 ident
INFO  16:28:31,211 - #4 [
INFO  16:28:31,211 - #38 2
INFO  16:28:31,211 - #5 ]
INFO  16:28:31,212 - #19 --
INFO  16:28:31,212 - #6 ;
INFO  16:28:31,212 - #42 if
INFO  16:28:31,212 - #8 (
INFO  16:28:31,212 - #39 ident
INFO  16:28:31,212 - #37 .
INFO  16:28:31,212 - #39 ident
INFO  16:28:31,212 - #4 [
INFO  16:28:31,212 - #39 i
INFO  16:28:31,212 - #5 ]
INFO  16:28:31,213 - #21 ||
INFO  16:28:31,213 - #38 2
INFO  16:28:31,213 - #13 *
INFO  16:28:31,213 - #39 ident
INFO  16:28:31,213 - #20 &&
INFO  16:28:31,214 - #38 2
INFO  16:28:31,214 - #27 <=
INFO  16:28:31,214 - #39 m
INFO  16:28:31,215 - #8 (
INFO  16:28:31,216 - #38 2
INFO  16:28:31,216 - #9 )
INFO  16:28:31,216 - #9 )
INFO  16:28:31,217 - #32 return
INFO  16:28:31,218 - #6 ;
INFO  16:28:31,218 - #43 else
INFO  16:28:31,219 - #48 break
INFO  16:28:31,219 - #6 ;
INFO  16:28:31,220 - #3 }
INFO  16:28:31,223 - #3 }
