INFO  16:28:49,733 - Compiling source file: C:\Users\Administrator\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:28:49,855 - #28 program
INFO  16:28:49,855 - #39 MJProgram
INFO  16:28:49,855 - #39 int
INFO  16:28:49,858 - #39 x
INFO  16:28:49,860 - #6 ;
INFO  16:28:49,860 - #39 int
INFO  16:28:49,861 - #39 y
INFO  16:28:49,861 - #6 ;
INFO  16:28:49,861 - #39 int
INFO  16:28:49,861 - #39 z
INFO  16:28:49,862 - #10 ,
INFO  16:28:49,862 - #39 u
INFO  16:28:49,862 - #10 ,
INFO  16:28:49,862 - #39 v
INFO  16:28:49,862 - #4 [
INFO  16:28:49,862 - #5 ]
INFO  16:28:49,863 - #10 ,
INFO  16:28:49,863 - #39 w
INFO  16:28:49,863 - #4 [
INFO  16:28:49,863 - #5 ]
INFO  16:28:49,863 - #10 ,
INFO  16:28:49,864 - #39 x
INFO  16:28:49,864 - #6 ;
INFO  16:28:49,864 - #29 const
INFO  16:28:49,864 - #39 int
INFO  16:28:49,864 - #39 a
INFO  16:28:49,865 - #16 =
INFO  16:28:49,865 - #38 1
INFO  16:28:49,865 - #6 ;
INFO  16:28:49,865 - #29 const
INFO  16:28:49,868 - #39 bool
INFO  16:28:49,868 - #39 b
INFO  16:28:49,868 - #16 =
INFO  16:28:49,868 - #41 true
INFO  16:28:49,868 - #10 ,
INFO  16:28:49,868 - #39 c
INFO  16:28:49,868 - #16 =
INFO  16:28:49,869 - #41 false
INFO  16:28:49,869 - #6 ;
INFO  16:28:49,869 - #34 class
INFO  16:28:49,869 - #39 Klasa1
INFO  16:28:49,869 - #2 {
INFO  16:28:49,870 - #39 int
INFO  16:28:49,871 - #39 a
INFO  16:28:49,871 - #6 ;
INFO  16:28:49,871 - #2 {
INFO  16:28:49,873 - #33 void
INFO  16:28:49,874 - #39 f1
INFO  16:28:49,874 - #8 (
INFO  16:28:49,874 - #9 )
INFO  16:28:49,877 - #39 int
INFO  16:28:49,877 - #39 f
INFO  16:28:49,877 - #6 ;
INFO  16:28:49,877 - #2 {
INFO  16:28:49,877 - #3 }
INFO  16:28:49,877 - #3 }
INFO  16:28:49,880 - #3 }
INFO  16:28:49,880 - #34 class
INFO  16:28:49,882 - #39 Klasa2
INFO  16:28:49,882 - #35 extends
INFO  16:28:49,882 - #39 int
INFO  16:28:49,882 - #2 {
INFO  16:28:49,882 - #3 }
INFO  16:28:49,883 - #2 {
INFO  16:28:49,884 - #33 void
INFO  16:28:49,884 - #39 metoda
INFO  16:28:49,884 - #8 (
INFO  16:28:49,884 - #39 int
INFO  16:28:49,884 - #39 a
INFO  16:28:49,884 - #10 ,
INFO  16:28:49,884 - #39 int
INFO  16:28:49,885 - #39 b
INFO  16:28:49,885 - #4 [
INFO  16:28:49,885 - #5 ]
INFO  16:28:49,885 - #9 )
INFO  16:28:49,886 - #39 int
INFO  16:28:49,886 - #39 a
INFO  16:28:49,886 - #10 ,
INFO  16:28:49,886 - #39 b
INFO  16:28:49,886 - #6 ;
INFO  16:28:49,886 - #2 {
INFO  16:28:49,886 - #39 ident
INFO  16:28:49,887 - #37 .
INFO  16:28:49,888 - #39 ident
INFO  16:28:49,888 - #4 [
INFO  16:28:49,889 - #38 2
INFO  16:28:49,891 - #5 ]
INFO  16:28:49,895 - #16 =
INFO  16:28:49,896 - #12 -
INFO  16:28:49,898 - #39 ident
INFO  16:28:49,900 - #4 [
INFO  16:28:49,900 - #39 ident
INFO  16:28:49,900 - #37 .
INFO  16:28:49,900 - #39 ident
INFO  16:28:49,900 - #13 *
INFO  16:28:49,900 - #39 ident
INFO  16:28:49,904 - #5 ]
INFO  16:28:49,904 - #6 ;
INFO  16:28:49,904 - #39 ident
INFO  16:28:49,904 - #37 .
INFO  16:28:49,904 - #39 ident
INFO  16:28:49,904 - #4 [
INFO  16:28:49,905 - #38 2
INFO  16:28:49,905 - #5 ]
INFO  16:28:49,905 - #19 --
INFO  16:28:49,905 - #6 ;
INFO  16:28:49,905 - #42 if
INFO  16:28:49,905 - #8 (
INFO  16:28:49,905 - #39 ident
INFO  16:28:49,906 - #37 .
INFO  16:28:49,906 - #39 ident
INFO  16:28:49,906 - #4 [
INFO  16:28:49,906 - #39 i
INFO  16:28:49,906 - #5 ]
INFO  16:28:49,906 - #21 ||
INFO  16:28:49,907 - #38 2
INFO  16:28:49,907 - #13 *
INFO  16:28:49,907 - #39 ident
INFO  16:28:49,907 - #20 &&
INFO  16:28:49,908 - #38 2
INFO  16:28:49,908 - #27 <=
INFO  16:28:49,908 - #39 m
INFO  16:28:49,910 - #8 (
INFO  16:28:49,910 - #38 2
INFO  16:28:49,910 - #9 )
INFO  16:28:49,911 - #9 )
INFO  16:28:49,912 - #42 if
INFO  16:28:49,912 - #8 (
INFO  16:28:49,912 - #38 2
INFO  16:28:49,912 - #9 )
INFO  16:28:49,912 - #32 return
INFO  16:28:49,912 - #6 ;
INFO  16:28:49,915 - #43 else
INFO  16:28:49,916 - #48 break
INFO  16:28:49,917 - #6 ;
INFO  16:28:49,917 - #3 }
INFO  16:28:49,918 - #3 }
