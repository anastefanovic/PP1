INFO  16:38:08,997 - Compiling source file: C:\Users\Administrator\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:38:09,093 - #28 program
INFO  16:38:09,093 - #39 MJProgram
INFO  16:38:09,094 - #39 int
INFO  16:38:09,096 - #39 x
INFO  16:38:09,097 - #6 ;
INFO  16:38:09,098 - #39 int
INFO  16:38:09,098 - #39 y
INFO  16:38:09,098 - #6 ;
INFO  16:38:09,098 - #39 int
INFO  16:38:09,099 - #39 z
INFO  16:38:09,099 - #10 ,
INFO  16:38:09,099 - #39 u
INFO  16:38:09,099 - #10 ,
INFO  16:38:09,100 - #39 v
INFO  16:38:09,100 - #4 [
INFO  16:38:09,100 - #5 ]
INFO  16:38:09,100 - #10 ,
INFO  16:38:09,101 - #39 w
INFO  16:38:09,101 - #4 [
INFO  16:38:09,101 - #5 ]
INFO  16:38:09,101 - #10 ,
INFO  16:38:09,101 - #39 x
INFO  16:38:09,102 - #6 ;
INFO  16:38:09,102 - #29 const
INFO  16:38:09,102 - #39 int
INFO  16:38:09,102 - #39 a
INFO  16:38:09,102 - #16 =
INFO  16:38:09,102 - #38 1
INFO  16:38:09,102 - #6 ;
INFO  16:38:09,103 - #29 const
INFO  16:38:09,104 - #39 bool
INFO  16:38:09,104 - #39 b
INFO  16:38:09,105 - #16 =
INFO  16:38:09,105 - #41 true
INFO  16:38:09,105 - #10 ,
INFO  16:38:09,105 - #39 c
INFO  16:38:09,105 - #16 =
INFO  16:38:09,106 - #41 false
INFO  16:38:09,106 - #6 ;
INFO  16:38:09,107 - #34 class
INFO  16:38:09,107 - #39 Klasa1
INFO  16:38:09,107 - #2 {
INFO  16:38:09,109 - #39 int
INFO  16:38:09,111 - #39 a
INFO  16:38:09,111 - #6 ;
INFO  16:38:09,111 - #2 {
INFO  16:38:09,112 - #33 void
INFO  16:38:09,113 - #39 f1
INFO  16:38:09,114 - #8 (
INFO  16:38:09,114 - #9 )
INFO  16:38:09,115 - #39 int
INFO  16:38:09,116 - #39 f
INFO  16:38:09,116 - #6 ;
INFO  16:38:09,116 - #2 {
INFO  16:38:09,116 - #3 }
INFO  16:38:09,117 - #3 }
INFO  16:38:09,119 - #3 }
INFO  16:38:09,119 - #34 class
INFO  16:38:09,121 - #39 Klasa2
INFO  16:38:09,121 - #35 extends
INFO  16:38:09,121 - #39 int
INFO  16:38:09,121 - #2 {
INFO  16:38:09,122 - #3 }
INFO  16:38:09,123 - #2 {
INFO  16:38:09,123 - #33 void
INFO  16:38:09,123 - #39 metoda
INFO  16:38:09,123 - #8 (
INFO  16:38:09,123 - #39 int
INFO  16:38:09,124 - #39 a
INFO  16:38:09,124 - #10 ,
INFO  16:38:09,124 - #39 int
INFO  16:38:09,124 - #39 b
INFO  16:38:09,124 - #4 [
INFO  16:38:09,124 - #5 ]
INFO  16:38:09,124 - #9 )
INFO  16:38:09,125 - #39 int
INFO  16:38:09,125 - #39 a
INFO  16:38:09,125 - #10 ,
INFO  16:38:09,125 - #39 b
INFO  16:38:09,125 - #6 ;
INFO  16:38:09,125 - #2 {
INFO  16:38:09,125 - #39 ident
INFO  16:38:09,125 - #37 .
INFO  16:38:09,127 - #39 ident
INFO  16:38:09,127 - #4 [
INFO  16:38:09,127 - #38 2
INFO  16:38:09,130 - #5 ]
INFO  16:38:09,133 - #16 =
INFO  16:38:09,134 - #12 -
INFO  16:38:09,136 - #39 ident
INFO  16:38:09,137 - #4 [
INFO  16:38:09,137 - #39 ident
INFO  16:38:09,137 - #37 .
INFO  16:38:09,137 - #39 ident
INFO  16:38:09,137 - #13 *
INFO  16:38:09,138 - #39 ident
INFO  16:38:09,140 - #5 ]
INFO  16:38:09,140 - #6 ;
INFO  16:38:09,141 - #39 ident
INFO  16:38:09,142 - #37 .
INFO  16:38:09,142 - #39 ident
INFO  16:38:09,142 - #4 [
INFO  16:38:09,142 - #38 2
INFO  16:38:09,143 - #5 ]
INFO  16:38:09,143 - #19 --
INFO  16:38:09,143 - #6 ;
INFO  16:38:09,143 - #42 if
INFO  16:38:09,143 - #8 (
INFO  16:38:09,143 - #39 ident
INFO  16:38:09,143 - #37 .
INFO  16:38:09,143 - #39 ident
INFO  16:38:09,143 - #4 [
INFO  16:38:09,144 - #39 i
INFO  16:38:09,144 - #5 ]
INFO  16:38:09,144 - #21 ||
INFO  16:38:09,144 - #38 2
INFO  16:38:09,144 - #13 *
INFO  16:38:09,145 - #39 ident
INFO  16:38:09,145 - #20 &&
INFO  16:38:09,145 - #38 2
INFO  16:38:09,145 - #27 <=
INFO  16:38:09,145 - #39 m
INFO  16:38:09,147 - #8 (
INFO  16:38:09,148 - #38 2
INFO  16:38:09,148 - #9 )
INFO  16:38:09,148 - #9 )
INFO  16:38:09,149 - #42 if
INFO  16:38:09,149 - #8 (
INFO  16:38:09,149 - #38 2
INFO  16:38:09,149 - #9 )
INFO  16:38:09,149 - #32 return
INFO  16:38:09,149 - #6 ;
INFO  16:38:09,152 - #43 else
INFO  16:38:09,153 - #2 {
INFO  16:38:09,153 - #31 read
INFO  16:38:09,153 - #8 (
INFO  16:38:09,153 - #39 ident
INFO  16:38:09,153 - #4 [
INFO  16:38:09,153 - #38 2
INFO  16:38:09,153 - #5 ]
INFO  16:38:09,153 - #9 )
INFO  16:38:09,153 - #6 ;
INFO  16:38:09,153 - #31 read
INFO  16:38:09,154 - #8 (
INFO  16:38:09,154 - #39 ident
INFO  16:38:09,154 - #9 )
INFO  16:38:09,154 - #6 ;
INFO  16:38:09,154 - #3 }
INFO  16:38:09,154 - #44 do
INFO  16:38:09,154 - #32 return
INFO  16:38:09,154 - #6 ;
INFO  16:38:09,155 - #45 while
INFO  16:38:09,155 - #8 (
INFO  16:38:09,155 - #38 2
INFO  16:38:09,155 - #24 >
INFO  16:38:09,155 - #39 idetnt
INFO  16:38:09,156 - #8 (
INFO  16:38:09,156 - #9 )
INFO  16:38:09,157 - #9 )
INFO  16:38:09,157 - #6 ;
INFO  16:38:09,157 - #46 switch
INFO  16:38:09,157 - #8 (
INFO  16:38:09,157 - #38 2
INFO  16:38:09,157 - #9 )
INFO  16:38:09,157 - #2 {
INFO  16:38:09,157 - #47 case
INFO  16:38:09,159 - #38 1
INFO  16:38:09,159 - #7 :
INFO  16:38:09,159 - #47 case
INFO  16:38:09,160 - #38 2
INFO  16:38:09,161 - #7 :
INFO  16:38:09,161 - #3 }
INFO  16:38:09,161 - #3 }
INFO  16:38:09,161 - #3 }
