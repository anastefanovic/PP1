INFO  16:37:33,165 - Compiling source file: C:\Users\Administrator\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  16:37:33,266 - #28 program
INFO  16:37:33,266 - #39 MJProgram
INFO  16:37:33,266 - #39 int
INFO  16:37:33,269 - #39 x
INFO  16:37:33,271 - #6 ;
INFO  16:37:33,271 - #39 int
INFO  16:37:33,272 - #39 y
INFO  16:37:33,272 - #6 ;
INFO  16:37:33,272 - #39 int
INFO  16:37:33,272 - #39 z
INFO  16:37:33,273 - #10 ,
INFO  16:37:33,273 - #39 u
INFO  16:37:33,273 - #10 ,
INFO  16:37:33,273 - #39 v
INFO  16:37:33,273 - #4 [
INFO  16:37:33,274 - #5 ]
INFO  16:37:33,274 - #10 ,
INFO  16:37:33,274 - #39 w
INFO  16:37:33,274 - #4 [
INFO  16:37:33,274 - #5 ]
INFO  16:37:33,275 - #10 ,
INFO  16:37:33,276 - #39 x
INFO  16:37:33,276 - #6 ;
INFO  16:37:33,276 - #29 const
INFO  16:37:33,276 - #39 int
INFO  16:37:33,276 - #39 a
INFO  16:37:33,276 - #16 =
INFO  16:37:33,276 - #38 1
INFO  16:37:33,277 - #6 ;
INFO  16:37:33,277 - #29 const
INFO  16:37:33,278 - #39 bool
INFO  16:37:33,279 - #39 b
INFO  16:37:33,279 - #16 =
INFO  16:37:33,279 - #41 true
INFO  16:37:33,279 - #10 ,
INFO  16:37:33,279 - #39 c
INFO  16:37:33,280 - #16 =
INFO  16:37:33,280 - #41 false
INFO  16:37:33,280 - #6 ;
INFO  16:37:33,280 - #34 class
INFO  16:37:33,281 - #39 Klasa1
INFO  16:37:33,281 - #2 {
INFO  16:37:33,282 - #39 int
INFO  16:37:33,284 - #39 a
INFO  16:37:33,284 - #6 ;
INFO  16:37:33,284 - #2 {
INFO  16:37:33,284 - #33 void
INFO  16:37:33,285 - #39 f1
INFO  16:37:33,287 - #8 (
INFO  16:37:33,287 - #9 )
INFO  16:37:33,288 - #39 int
INFO  16:37:33,288 - #39 f
INFO  16:37:33,288 - #6 ;
INFO  16:37:33,288 - #2 {
INFO  16:37:33,288 - #3 }
INFO  16:37:33,290 - #3 }
INFO  16:37:33,292 - #3 }
INFO  16:37:33,292 - #34 class
INFO  16:37:33,294 - #39 Klasa2
INFO  16:37:33,294 - #35 extends
INFO  16:37:33,294 - #39 int
INFO  16:37:33,294 - #2 {
INFO  16:37:33,294 - #3 }
INFO  16:37:33,296 - #2 {
INFO  16:37:33,296 - #33 void
INFO  16:37:33,296 - #39 metoda
INFO  16:37:33,296 - #8 (
INFO  16:37:33,296 - #39 int
INFO  16:37:33,297 - #39 a
INFO  16:37:33,297 - #10 ,
INFO  16:37:33,297 - #39 int
INFO  16:37:33,297 - #39 b
INFO  16:37:33,298 - #4 [
INFO  16:37:33,298 - #5 ]
INFO  16:37:33,298 - #9 )
INFO  16:37:33,298 - #39 int
INFO  16:37:33,298 - #39 a
INFO  16:37:33,298 - #10 ,
INFO  16:37:33,299 - #39 b
INFO  16:37:33,299 - #6 ;
INFO  16:37:33,299 - #2 {
INFO  16:37:33,299 - #39 ident
INFO  16:37:33,299 - #37 .
INFO  16:37:33,300 - #39 ident
INFO  16:37:33,300 - #4 [
INFO  16:37:33,301 - #38 2
INFO  16:37:33,303 - #5 ]
INFO  16:37:33,306 - #16 =
INFO  16:37:33,308 - #12 -
INFO  16:37:33,310 - #39 ident
INFO  16:37:33,311 - #4 [
INFO  16:37:33,311 - #39 ident
INFO  16:37:33,311 - #37 .
INFO  16:37:33,311 - #39 ident
INFO  16:37:33,311 - #13 *
INFO  16:37:33,312 - #39 ident
INFO  16:37:33,314 - #5 ]
INFO  16:37:33,314 - #6 ;
INFO  16:37:33,315 - #39 ident
INFO  16:37:33,315 - #37 .
INFO  16:37:33,316 - #39 ident
INFO  16:37:33,316 - #4 [
INFO  16:37:33,316 - #38 2
INFO  16:37:33,316 - #5 ]
INFO  16:37:33,316 - #19 --
INFO  16:37:33,316 - #6 ;
INFO  16:37:33,317 - #42 if
INFO  16:37:33,317 - #8 (
INFO  16:37:33,317 - #39 ident
INFO  16:37:33,317 - #37 .
INFO  16:37:33,317 - #39 ident
INFO  16:37:33,317 - #4 [
INFO  16:37:33,317 - #39 i
INFO  16:37:33,317 - #5 ]
INFO  16:37:33,317 - #21 ||
INFO  16:37:33,318 - #38 2
INFO  16:37:33,318 - #13 *
INFO  16:37:33,318 - #39 ident
INFO  16:37:33,318 - #20 &&
INFO  16:37:33,318 - #38 2
INFO  16:37:33,319 - #27 <=
INFO  16:37:33,319 - #39 m
INFO  16:37:33,321 - #8 (
INFO  16:37:33,321 - #38 2
INFO  16:37:33,321 - #9 )
INFO  16:37:33,321 - #9 )
INFO  16:37:33,322 - #42 if
INFO  16:37:33,322 - #8 (
INFO  16:37:33,322 - #38 2
INFO  16:37:33,322 - #9 )
INFO  16:37:33,322 - #32 return
INFO  16:37:33,323 - #6 ;
INFO  16:37:33,325 - #43 else
INFO  16:37:33,326 - #2 {
INFO  16:37:33,326 - #31 read
INFO  16:37:33,326 - #8 (
INFO  16:37:33,326 - #39 ident
INFO  16:37:33,327 - #4 [
INFO  16:37:33,327 - #38 2
INFO  16:37:33,327 - #5 ]
INFO  16:37:33,327 - #9 )
INFO  16:37:33,327 - #6 ;
INFO  16:37:33,327 - #31 read
INFO  16:37:33,327 - #8 (
INFO  16:37:33,327 - #39 ident
INFO  16:37:33,327 - #9 )
INFO  16:37:33,327 - #6 ;
INFO  16:37:33,328 - #3 }
INFO  16:37:33,328 - #44 do
INFO  16:37:33,328 - #32 return
INFO  16:37:33,328 - #6 ;
INFO  16:37:33,328 - #45 while
INFO  16:37:33,328 - #8 (
INFO  16:37:33,328 - #38 2
INFO  16:37:33,328 - #24 >
INFO  16:37:33,329 - #39 idetnt
INFO  16:37:33,330 - #8 (
INFO  16:37:33,330 - #9 )
INFO  16:37:33,330 - #9 )
INFO  16:37:33,330 - #6 ;
INFO  16:37:33,330 - #46 switch
INFO  16:37:33,331 - #8 (
INFO  16:37:33,331 - #38 2
INFO  16:37:33,331 - #9 )
INFO  16:37:33,331 - #2 {
INFO  16:37:33,331 - #47 case
INFO  16:37:33,332 - #38 1
INFO  16:37:33,333 - #7 :
INFO  16:37:33,333 - #47 case
INFO  16:37:33,334 - #38 2
INFO  16:37:33,334 - #7 :
INFO  16:37:33,334 - #3 }
INFO  16:37:33,335 - #3 }
INFO  16:37:33,335 - #3 }
